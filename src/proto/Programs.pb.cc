// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Programs.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "Programs.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* Programs_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Programs_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_Programs_2eproto() {
  protobuf_AddDesc_Programs_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "Programs.proto");
  GOOGLE_CHECK(file != NULL);
  Programs_descriptor_ = file->message_type(0);
  static const int Programs_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Programs, programs_),
  };
  Programs_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Programs_descriptor_,
      Programs::default_instance_,
      Programs_offsets_,
      -1,
      -1,
      -1,
      sizeof(Programs),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Programs, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Programs, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_Programs_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Programs_descriptor_, &Programs::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_Programs_2eproto() {
  delete Programs::default_instance_;
  delete Programs_reflection_;
}

void protobuf_AddDesc_Programs_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_AddDesc_Program_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\016Programs.proto\032\rProgram.proto\"&\n\010Progr"
    "ams\022\032\n\010programs\030\001 \003(\0132\010.Programb\006proto3", 79);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Programs.proto", &protobuf_RegisterTypes);
  Programs::default_instance_ = new Programs();
  Programs::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_Programs_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_Programs_2eproto {
  StaticDescriptorInitializer_Programs_2eproto() {
    protobuf_AddDesc_Programs_2eproto();
  }
} static_descriptor_initializer_Programs_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Programs::kProgramsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Programs::Programs()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Programs)
}

void Programs::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Programs::Programs(const Programs& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Programs)
}

void Programs::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

Programs::~Programs() {
  // @@protoc_insertion_point(destructor:Programs)
  SharedDtor();
}

void Programs::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Programs::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Programs::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Programs_descriptor_;
}

const Programs& Programs::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Programs_2eproto();
  return *default_instance_;
}

Programs* Programs::default_instance_ = NULL;

Programs* Programs::New(::google::protobuf::Arena* arena) const {
  Programs* n = new Programs;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Programs::Clear() {
  programs_.Clear();
}

bool Programs::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Programs)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Program programs = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_programs:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_programs()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_programs;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Programs)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Programs)
  return false;
#undef DO_
}

void Programs::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Programs)
  // repeated .Program programs = 1;
  for (unsigned int i = 0, n = this->programs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->programs(i), output);
  }

  // @@protoc_insertion_point(serialize_end:Programs)
}

::google::protobuf::uint8* Programs::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Programs)
  // repeated .Program programs = 1;
  for (unsigned int i = 0, n = this->programs_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->programs(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Programs)
  return target;
}

int Programs::ByteSize() const {
  int total_size = 0;

  // repeated .Program programs = 1;
  total_size += 1 * this->programs_size();
  for (int i = 0; i < this->programs_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->programs(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Programs::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Programs* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Programs>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Programs::MergeFrom(const Programs& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  programs_.MergeFrom(from.programs_);
}

void Programs::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Programs::CopyFrom(const Programs& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Programs::IsInitialized() const {

  return true;
}

void Programs::Swap(Programs* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Programs::InternalSwap(Programs* other) {
  programs_.UnsafeArenaSwap(&other->programs_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Programs::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Programs_descriptor_;
  metadata.reflection = Programs_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Programs

// repeated .Program programs = 1;
int Programs::programs_size() const {
  return programs_.size();
}
void Programs::clear_programs() {
  programs_.Clear();
}
const ::Program& Programs::programs(int index) const {
  // @@protoc_insertion_point(field_get:Programs.programs)
  return programs_.Get(index);
}
::Program* Programs::mutable_programs(int index) {
  // @@protoc_insertion_point(field_mutable:Programs.programs)
  return programs_.Mutable(index);
}
::Program* Programs::add_programs() {
  // @@protoc_insertion_point(field_add:Programs.programs)
  return programs_.Add();
}
::google::protobuf::RepeatedPtrField< ::Program >*
Programs::mutable_programs() {
  // @@protoc_insertion_point(field_mutable_list:Programs.programs)
  return &programs_;
}
const ::google::protobuf::RepeatedPtrField< ::Program >&
Programs::programs() const {
  // @@protoc_insertion_point(field_list:Programs.programs)
  return programs_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
