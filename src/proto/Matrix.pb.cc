// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Matrix.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "Matrix.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* MatrixProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MatrixProto_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_Matrix_2eproto() {
  protobuf_AddDesc_Matrix_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "Matrix.proto");
  GOOGLE_CHECK(file != NULL);
  MatrixProto_descriptor_ = file->message_type(0);
  static const int MatrixProto_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatrixProto, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatrixProto, ip_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatrixProto, port_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatrixProto, numconports_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatrixProto, numcpuports_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatrixProto, videoconnections_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatrixProto, kwmconnections_),
  };
  MatrixProto_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MatrixProto_descriptor_,
      MatrixProto::default_instance_,
      MatrixProto_offsets_,
      -1,
      -1,
      -1,
      sizeof(MatrixProto),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatrixProto, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatrixProto, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_Matrix_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MatrixProto_descriptor_, &MatrixProto::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_Matrix_2eproto() {
  delete MatrixProto::default_instance_;
  delete MatrixProto_reflection_;
}

void protobuf_AddDesc_Matrix_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_AddDesc_VideoConnection_2eproto();
  ::protobuf_AddDesc_KwmConnection_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\014Matrix.proto\032\025VideoConnection.proto\032\023K"
    "wmConnection.proto\"\261\001\n\013MatrixProto\022\n\n\002id"
    "\030\001 \001(\r\022\n\n\002ip\030\002 \001(\t\022\014\n\004port\030\003 \001(\r\022\023\n\013numC"
    "onPorts\030\004 \001(\r\022\023\n\013numCpuPorts\030\005 \001(\r\022*\n\020vi"
    "deoConnections\030\006 \003(\0132\020.VideoConnection\022&"
    "\n\016kwmConnections\030\007 \003(\0132\016.KwmConnectionb\006"
    "proto3", 246);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Matrix.proto", &protobuf_RegisterTypes);
  MatrixProto::default_instance_ = new MatrixProto();
  MatrixProto::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_Matrix_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_Matrix_2eproto {
  StaticDescriptorInitializer_Matrix_2eproto() {
    protobuf_AddDesc_Matrix_2eproto();
  }
} static_descriptor_initializer_Matrix_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MatrixProto::kIdFieldNumber;
const int MatrixProto::kIpFieldNumber;
const int MatrixProto::kPortFieldNumber;
const int MatrixProto::kNumConPortsFieldNumber;
const int MatrixProto::kNumCpuPortsFieldNumber;
const int MatrixProto::kVideoConnectionsFieldNumber;
const int MatrixProto::kKwmConnectionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MatrixProto::MatrixProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MatrixProto)
}

void MatrixProto::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

MatrixProto::MatrixProto(const MatrixProto& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MatrixProto)
}

void MatrixProto::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  id_ = 0u;
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  port_ = 0u;
  numconports_ = 0u;
  numcpuports_ = 0u;
}

MatrixProto::~MatrixProto() {
  // @@protoc_insertion_point(destructor:MatrixProto)
  SharedDtor();
}

void MatrixProto::SharedDtor() {
  ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void MatrixProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MatrixProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MatrixProto_descriptor_;
}

const MatrixProto& MatrixProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Matrix_2eproto();
  return *default_instance_;
}

MatrixProto* MatrixProto::default_instance_ = NULL;

MatrixProto* MatrixProto::New(::google::protobuf::Arena* arena) const {
  MatrixProto* n = new MatrixProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MatrixProto::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<MatrixProto*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(id_, numcpuports_);
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

  videoconnections_.Clear();
  kwmconnections_.Clear();
}

bool MatrixProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MatrixProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_ip;
        break;
      }

      // optional string ip = 2;
      case 2: {
        if (tag == 18) {
         parse_ip:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ip()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ip().data(), this->ip().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "MatrixProto.ip"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_port;
        break;
      }

      // optional uint32 port = 3;
      case 3: {
        if (tag == 24) {
         parse_port:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &port_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_numConPorts;
        break;
      }

      // optional uint32 numConPorts = 4;
      case 4: {
        if (tag == 32) {
         parse_numConPorts:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &numconports_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_numCpuPorts;
        break;
      }

      // optional uint32 numCpuPorts = 5;
      case 5: {
        if (tag == 40) {
         parse_numCpuPorts:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &numcpuports_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_videoConnections;
        break;
      }

      // repeated .VideoConnection videoConnections = 6;
      case 6: {
        if (tag == 50) {
         parse_videoConnections:
          DO_(input->IncrementRecursionDepth());
         parse_loop_videoConnections:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_videoconnections()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_loop_videoConnections;
        if (input->ExpectTag(58)) goto parse_loop_kwmConnections;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .KwmConnection kwmConnections = 7;
      case 7: {
        if (tag == 58) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_kwmConnections:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_kwmconnections()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_loop_kwmConnections;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MatrixProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MatrixProto)
  return false;
#undef DO_
}

void MatrixProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MatrixProto)
  // optional uint32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // optional string ip = 2;
  if (this->ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip().data(), this->ip().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MatrixProto.ip");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->ip(), output);
  }

  // optional uint32 port = 3;
  if (this->port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->port(), output);
  }

  // optional uint32 numConPorts = 4;
  if (this->numconports() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->numconports(), output);
  }

  // optional uint32 numCpuPorts = 5;
  if (this->numcpuports() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->numcpuports(), output);
  }

  // repeated .VideoConnection videoConnections = 6;
  for (unsigned int i = 0, n = this->videoconnections_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->videoconnections(i), output);
  }

  // repeated .KwmConnection kwmConnections = 7;
  for (unsigned int i = 0, n = this->kwmconnections_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->kwmconnections(i), output);
  }

  // @@protoc_insertion_point(serialize_end:MatrixProto)
}

::google::protobuf::uint8* MatrixProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MatrixProto)
  // optional uint32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // optional string ip = 2;
  if (this->ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip().data(), this->ip().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MatrixProto.ip");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->ip(), target);
  }

  // optional uint32 port = 3;
  if (this->port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->port(), target);
  }

  // optional uint32 numConPorts = 4;
  if (this->numconports() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->numconports(), target);
  }

  // optional uint32 numCpuPorts = 5;
  if (this->numcpuports() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->numcpuports(), target);
  }

  // repeated .VideoConnection videoConnections = 6;
  for (unsigned int i = 0, n = this->videoconnections_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->videoconnections(i), target);
  }

  // repeated .KwmConnection kwmConnections = 7;
  for (unsigned int i = 0, n = this->kwmconnections_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->kwmconnections(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:MatrixProto)
  return target;
}

int MatrixProto::ByteSize() const {
  int total_size = 0;

  // optional uint32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  // optional string ip = 2;
  if (this->ip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ip());
  }

  // optional uint32 port = 3;
  if (this->port() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->port());
  }

  // optional uint32 numConPorts = 4;
  if (this->numconports() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->numconports());
  }

  // optional uint32 numCpuPorts = 5;
  if (this->numcpuports() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->numcpuports());
  }

  // repeated .VideoConnection videoConnections = 6;
  total_size += 1 * this->videoconnections_size();
  for (int i = 0; i < this->videoconnections_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->videoconnections(i));
  }

  // repeated .KwmConnection kwmConnections = 7;
  total_size += 1 * this->kwmconnections_size();
  for (int i = 0; i < this->kwmconnections_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->kwmconnections(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MatrixProto::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const MatrixProto* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const MatrixProto>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MatrixProto::MergeFrom(const MatrixProto& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  videoconnections_.MergeFrom(from.videoconnections_);
  kwmconnections_.MergeFrom(from.kwmconnections_);
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.ip().size() > 0) {

    ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
  }
  if (from.port() != 0) {
    set_port(from.port());
  }
  if (from.numconports() != 0) {
    set_numconports(from.numconports());
  }
  if (from.numcpuports() != 0) {
    set_numcpuports(from.numcpuports());
  }
}

void MatrixProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MatrixProto::CopyFrom(const MatrixProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MatrixProto::IsInitialized() const {

  return true;
}

void MatrixProto::Swap(MatrixProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MatrixProto::InternalSwap(MatrixProto* other) {
  std::swap(id_, other->id_);
  ip_.Swap(&other->ip_);
  std::swap(port_, other->port_);
  std::swap(numconports_, other->numconports_);
  std::swap(numcpuports_, other->numcpuports_);
  videoconnections_.UnsafeArenaSwap(&other->videoconnections_);
  kwmconnections_.UnsafeArenaSwap(&other->kwmconnections_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MatrixProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MatrixProto_descriptor_;
  metadata.reflection = MatrixProto_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MatrixProto

// optional uint32 id = 1;
void MatrixProto::clear_id() {
  id_ = 0u;
}
 ::google::protobuf::uint32 MatrixProto::id() const {
  // @@protoc_insertion_point(field_get:MatrixProto.id)
  return id_;
}
 void MatrixProto::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:MatrixProto.id)
}

// optional string ip = 2;
void MatrixProto::clear_ip() {
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MatrixProto::ip() const {
  // @@protoc_insertion_point(field_get:MatrixProto.ip)
  return ip_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MatrixProto::set_ip(const ::std::string& value) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MatrixProto.ip)
}
 void MatrixProto::set_ip(const char* value) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MatrixProto.ip)
}
 void MatrixProto::set_ip(const char* value, size_t size) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MatrixProto.ip)
}
 ::std::string* MatrixProto::mutable_ip() {
  
  // @@protoc_insertion_point(field_mutable:MatrixProto.ip)
  return ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MatrixProto::release_ip() {
  
  return ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MatrixProto::set_allocated_ip(::std::string* ip) {
  if (ip != NULL) {
    
  } else {
    
  }
  ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip);
  // @@protoc_insertion_point(field_set_allocated:MatrixProto.ip)
}

// optional uint32 port = 3;
void MatrixProto::clear_port() {
  port_ = 0u;
}
 ::google::protobuf::uint32 MatrixProto::port() const {
  // @@protoc_insertion_point(field_get:MatrixProto.port)
  return port_;
}
 void MatrixProto::set_port(::google::protobuf::uint32 value) {
  
  port_ = value;
  // @@protoc_insertion_point(field_set:MatrixProto.port)
}

// optional uint32 numConPorts = 4;
void MatrixProto::clear_numconports() {
  numconports_ = 0u;
}
 ::google::protobuf::uint32 MatrixProto::numconports() const {
  // @@protoc_insertion_point(field_get:MatrixProto.numConPorts)
  return numconports_;
}
 void MatrixProto::set_numconports(::google::protobuf::uint32 value) {
  
  numconports_ = value;
  // @@protoc_insertion_point(field_set:MatrixProto.numConPorts)
}

// optional uint32 numCpuPorts = 5;
void MatrixProto::clear_numcpuports() {
  numcpuports_ = 0u;
}
 ::google::protobuf::uint32 MatrixProto::numcpuports() const {
  // @@protoc_insertion_point(field_get:MatrixProto.numCpuPorts)
  return numcpuports_;
}
 void MatrixProto::set_numcpuports(::google::protobuf::uint32 value) {
  
  numcpuports_ = value;
  // @@protoc_insertion_point(field_set:MatrixProto.numCpuPorts)
}

// repeated .VideoConnection videoConnections = 6;
int MatrixProto::videoconnections_size() const {
  return videoconnections_.size();
}
void MatrixProto::clear_videoconnections() {
  videoconnections_.Clear();
}
const ::VideoConnection& MatrixProto::videoconnections(int index) const {
  // @@protoc_insertion_point(field_get:MatrixProto.videoConnections)
  return videoconnections_.Get(index);
}
::VideoConnection* MatrixProto::mutable_videoconnections(int index) {
  // @@protoc_insertion_point(field_mutable:MatrixProto.videoConnections)
  return videoconnections_.Mutable(index);
}
::VideoConnection* MatrixProto::add_videoconnections() {
  // @@protoc_insertion_point(field_add:MatrixProto.videoConnections)
  return videoconnections_.Add();
}
::google::protobuf::RepeatedPtrField< ::VideoConnection >*
MatrixProto::mutable_videoconnections() {
  // @@protoc_insertion_point(field_mutable_list:MatrixProto.videoConnections)
  return &videoconnections_;
}
const ::google::protobuf::RepeatedPtrField< ::VideoConnection >&
MatrixProto::videoconnections() const {
  // @@protoc_insertion_point(field_list:MatrixProto.videoConnections)
  return videoconnections_;
}

// repeated .KwmConnection kwmConnections = 7;
int MatrixProto::kwmconnections_size() const {
  return kwmconnections_.size();
}
void MatrixProto::clear_kwmconnections() {
  kwmconnections_.Clear();
}
const ::KwmConnection& MatrixProto::kwmconnections(int index) const {
  // @@protoc_insertion_point(field_get:MatrixProto.kwmConnections)
  return kwmconnections_.Get(index);
}
::KwmConnection* MatrixProto::mutable_kwmconnections(int index) {
  // @@protoc_insertion_point(field_mutable:MatrixProto.kwmConnections)
  return kwmconnections_.Mutable(index);
}
::KwmConnection* MatrixProto::add_kwmconnections() {
  // @@protoc_insertion_point(field_add:MatrixProto.kwmConnections)
  return kwmconnections_.Add();
}
::google::protobuf::RepeatedPtrField< ::KwmConnection >*
MatrixProto::mutable_kwmconnections() {
  // @@protoc_insertion_point(field_mutable_list:MatrixProto.kwmConnections)
  return &kwmconnections_;
}
const ::google::protobuf::RepeatedPtrField< ::KwmConnection >&
MatrixProto::kwmconnections() const {
  // @@protoc_insertion_point(field_list:MatrixProto.kwmConnections)
  return kwmconnections_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
