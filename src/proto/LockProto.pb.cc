// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: LockProto.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "LockProto.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* LockProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LockProto_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_LockProto_2eproto() {
  protobuf_AddDesc_LockProto_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "LockProto.proto");
  GOOGLE_CHECK(file != NULL);
  LockProto_descriptor_ = file->message_type(0);
  static const int LockProto_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LockProto, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LockProto, programid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LockProto, repeatinterval_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LockProto, repeattimes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LockProto, starttime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LockProto, videoconnections_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LockProto, kwmconnection_),
  };
  LockProto_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      LockProto_descriptor_,
      LockProto::default_instance_,
      LockProto_offsets_,
      -1,
      -1,
      -1,
      sizeof(LockProto),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LockProto, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LockProto, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_LockProto_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      LockProto_descriptor_, &LockProto::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_LockProto_2eproto() {
  delete LockProto::default_instance_;
  delete LockProto_reflection_;
}

void protobuf_AddDesc_LockProto_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_AddDesc_VideoConnection_2eproto();
  ::protobuf_AddDesc_KwmConnection_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\017LockProto.proto\032\025VideoConnection.proto"
    "\032\023KwmConnection.proto\"\275\001\n\tLockProto\022\n\n\002i"
    "d\030\001 \001(\r\022\021\n\tprogramId\030\002 \001(\r\022\026\n\016repeatInte"
    "rval\030\003 \001(\004\022\023\n\013repeatTimes\030\004 \001(\r\022\021\n\tstart"
    "Time\030\005 \001(\004\022*\n\020videoConnections\030\006 \003(\0132\020.V"
    "ideoConnection\022%\n\rkwmConnection\030\007 \003(\0132\016."
    "KwmConnectionb\006proto3", 261);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "LockProto.proto", &protobuf_RegisterTypes);
  LockProto::default_instance_ = new LockProto();
  LockProto::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_LockProto_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_LockProto_2eproto {
  StaticDescriptorInitializer_LockProto_2eproto() {
    protobuf_AddDesc_LockProto_2eproto();
  }
} static_descriptor_initializer_LockProto_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LockProto::kIdFieldNumber;
const int LockProto::kProgramIdFieldNumber;
const int LockProto::kRepeatIntervalFieldNumber;
const int LockProto::kRepeatTimesFieldNumber;
const int LockProto::kStartTimeFieldNumber;
const int LockProto::kVideoConnectionsFieldNumber;
const int LockProto::kKwmConnectionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LockProto::LockProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:LockProto)
}

void LockProto::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

LockProto::LockProto(const LockProto& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:LockProto)
}

void LockProto::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  id_ = 0u;
  programid_ = 0u;
  repeatinterval_ = GOOGLE_ULONGLONG(0);
  repeattimes_ = 0u;
  starttime_ = GOOGLE_ULONGLONG(0);
}

LockProto::~LockProto() {
  // @@protoc_insertion_point(destructor:LockProto)
  SharedDtor();
}

void LockProto::SharedDtor() {
  if (this != default_instance_) {
  }
}

void LockProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LockProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LockProto_descriptor_;
}

const LockProto& LockProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_LockProto_2eproto();
  return *default_instance_;
}

LockProto* LockProto::default_instance_ = NULL;

LockProto* LockProto::New(::google::protobuf::Arena* arena) const {
  LockProto* n = new LockProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LockProto::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<LockProto*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(id_, starttime_);
  repeattimes_ = 0u;

#undef ZR_HELPER_
#undef ZR_

  videoconnections_.Clear();
  kwmconnection_.Clear();
}

bool LockProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LockProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_programId;
        break;
      }

      // optional uint32 programId = 2;
      case 2: {
        if (tag == 16) {
         parse_programId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &programid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_repeatInterval;
        break;
      }

      // optional uint64 repeatInterval = 3;
      case 3: {
        if (tag == 24) {
         parse_repeatInterval:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &repeatinterval_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_repeatTimes;
        break;
      }

      // optional uint32 repeatTimes = 4;
      case 4: {
        if (tag == 32) {
         parse_repeatTimes:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &repeattimes_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_startTime;
        break;
      }

      // optional uint64 startTime = 5;
      case 5: {
        if (tag == 40) {
         parse_startTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &starttime_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_videoConnections;
        break;
      }

      // repeated .VideoConnection videoConnections = 6;
      case 6: {
        if (tag == 50) {
         parse_videoConnections:
          DO_(input->IncrementRecursionDepth());
         parse_loop_videoConnections:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_videoconnections()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_loop_videoConnections;
        if (input->ExpectTag(58)) goto parse_loop_kwmConnection;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .KwmConnection kwmConnection = 7;
      case 7: {
        if (tag == 58) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_kwmConnection:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_kwmconnection()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_loop_kwmConnection;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LockProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LockProto)
  return false;
#undef DO_
}

void LockProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LockProto)
  // optional uint32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // optional uint32 programId = 2;
  if (this->programid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->programid(), output);
  }

  // optional uint64 repeatInterval = 3;
  if (this->repeatinterval() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->repeatinterval(), output);
  }

  // optional uint32 repeatTimes = 4;
  if (this->repeattimes() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->repeattimes(), output);
  }

  // optional uint64 startTime = 5;
  if (this->starttime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->starttime(), output);
  }

  // repeated .VideoConnection videoConnections = 6;
  for (unsigned int i = 0, n = this->videoconnections_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->videoconnections(i), output);
  }

  // repeated .KwmConnection kwmConnection = 7;
  for (unsigned int i = 0, n = this->kwmconnection_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->kwmconnection(i), output);
  }

  // @@protoc_insertion_point(serialize_end:LockProto)
}

::google::protobuf::uint8* LockProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:LockProto)
  // optional uint32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // optional uint32 programId = 2;
  if (this->programid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->programid(), target);
  }

  // optional uint64 repeatInterval = 3;
  if (this->repeatinterval() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->repeatinterval(), target);
  }

  // optional uint32 repeatTimes = 4;
  if (this->repeattimes() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->repeattimes(), target);
  }

  // optional uint64 startTime = 5;
  if (this->starttime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->starttime(), target);
  }

  // repeated .VideoConnection videoConnections = 6;
  for (unsigned int i = 0, n = this->videoconnections_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->videoconnections(i), target);
  }

  // repeated .KwmConnection kwmConnection = 7;
  for (unsigned int i = 0, n = this->kwmconnection_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->kwmconnection(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:LockProto)
  return target;
}

int LockProto::ByteSize() const {
  int total_size = 0;

  // optional uint32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  // optional uint32 programId = 2;
  if (this->programid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->programid());
  }

  // optional uint64 repeatInterval = 3;
  if (this->repeatinterval() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->repeatinterval());
  }

  // optional uint32 repeatTimes = 4;
  if (this->repeattimes() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->repeattimes());
  }

  // optional uint64 startTime = 5;
  if (this->starttime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->starttime());
  }

  // repeated .VideoConnection videoConnections = 6;
  total_size += 1 * this->videoconnections_size();
  for (int i = 0; i < this->videoconnections_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->videoconnections(i));
  }

  // repeated .KwmConnection kwmConnection = 7;
  total_size += 1 * this->kwmconnection_size();
  for (int i = 0; i < this->kwmconnection_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->kwmconnection(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LockProto::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const LockProto* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const LockProto>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void LockProto::MergeFrom(const LockProto& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  videoconnections_.MergeFrom(from.videoconnections_);
  kwmconnection_.MergeFrom(from.kwmconnection_);
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.programid() != 0) {
    set_programid(from.programid());
  }
  if (from.repeatinterval() != 0) {
    set_repeatinterval(from.repeatinterval());
  }
  if (from.repeattimes() != 0) {
    set_repeattimes(from.repeattimes());
  }
  if (from.starttime() != 0) {
    set_starttime(from.starttime());
  }
}

void LockProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LockProto::CopyFrom(const LockProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LockProto::IsInitialized() const {

  return true;
}

void LockProto::Swap(LockProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LockProto::InternalSwap(LockProto* other) {
  std::swap(id_, other->id_);
  std::swap(programid_, other->programid_);
  std::swap(repeatinterval_, other->repeatinterval_);
  std::swap(repeattimes_, other->repeattimes_);
  std::swap(starttime_, other->starttime_);
  videoconnections_.UnsafeArenaSwap(&other->videoconnections_);
  kwmconnection_.UnsafeArenaSwap(&other->kwmconnection_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LockProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LockProto_descriptor_;
  metadata.reflection = LockProto_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LockProto

// optional uint32 id = 1;
void LockProto::clear_id() {
  id_ = 0u;
}
 ::google::protobuf::uint32 LockProto::id() const {
  // @@protoc_insertion_point(field_get:LockProto.id)
  return id_;
}
 void LockProto::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:LockProto.id)
}

// optional uint32 programId = 2;
void LockProto::clear_programid() {
  programid_ = 0u;
}
 ::google::protobuf::uint32 LockProto::programid() const {
  // @@protoc_insertion_point(field_get:LockProto.programId)
  return programid_;
}
 void LockProto::set_programid(::google::protobuf::uint32 value) {
  
  programid_ = value;
  // @@protoc_insertion_point(field_set:LockProto.programId)
}

// optional uint64 repeatInterval = 3;
void LockProto::clear_repeatinterval() {
  repeatinterval_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 LockProto::repeatinterval() const {
  // @@protoc_insertion_point(field_get:LockProto.repeatInterval)
  return repeatinterval_;
}
 void LockProto::set_repeatinterval(::google::protobuf::uint64 value) {
  
  repeatinterval_ = value;
  // @@protoc_insertion_point(field_set:LockProto.repeatInterval)
}

// optional uint32 repeatTimes = 4;
void LockProto::clear_repeattimes() {
  repeattimes_ = 0u;
}
 ::google::protobuf::uint32 LockProto::repeattimes() const {
  // @@protoc_insertion_point(field_get:LockProto.repeatTimes)
  return repeattimes_;
}
 void LockProto::set_repeattimes(::google::protobuf::uint32 value) {
  
  repeattimes_ = value;
  // @@protoc_insertion_point(field_set:LockProto.repeatTimes)
}

// optional uint64 startTime = 5;
void LockProto::clear_starttime() {
  starttime_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 LockProto::starttime() const {
  // @@protoc_insertion_point(field_get:LockProto.startTime)
  return starttime_;
}
 void LockProto::set_starttime(::google::protobuf::uint64 value) {
  
  starttime_ = value;
  // @@protoc_insertion_point(field_set:LockProto.startTime)
}

// repeated .VideoConnection videoConnections = 6;
int LockProto::videoconnections_size() const {
  return videoconnections_.size();
}
void LockProto::clear_videoconnections() {
  videoconnections_.Clear();
}
const ::VideoConnection& LockProto::videoconnections(int index) const {
  // @@protoc_insertion_point(field_get:LockProto.videoConnections)
  return videoconnections_.Get(index);
}
::VideoConnection* LockProto::mutable_videoconnections(int index) {
  // @@protoc_insertion_point(field_mutable:LockProto.videoConnections)
  return videoconnections_.Mutable(index);
}
::VideoConnection* LockProto::add_videoconnections() {
  // @@protoc_insertion_point(field_add:LockProto.videoConnections)
  return videoconnections_.Add();
}
::google::protobuf::RepeatedPtrField< ::VideoConnection >*
LockProto::mutable_videoconnections() {
  // @@protoc_insertion_point(field_mutable_list:LockProto.videoConnections)
  return &videoconnections_;
}
const ::google::protobuf::RepeatedPtrField< ::VideoConnection >&
LockProto::videoconnections() const {
  // @@protoc_insertion_point(field_list:LockProto.videoConnections)
  return videoconnections_;
}

// repeated .KwmConnection kwmConnection = 7;
int LockProto::kwmconnection_size() const {
  return kwmconnection_.size();
}
void LockProto::clear_kwmconnection() {
  kwmconnection_.Clear();
}
const ::KwmConnection& LockProto::kwmconnection(int index) const {
  // @@protoc_insertion_point(field_get:LockProto.kwmConnection)
  return kwmconnection_.Get(index);
}
::KwmConnection* LockProto::mutable_kwmconnection(int index) {
  // @@protoc_insertion_point(field_mutable:LockProto.kwmConnection)
  return kwmconnection_.Mutable(index);
}
::KwmConnection* LockProto::add_kwmconnection() {
  // @@protoc_insertion_point(field_add:LockProto.kwmConnection)
  return kwmconnection_.Add();
}
::google::protobuf::RepeatedPtrField< ::KwmConnection >*
LockProto::mutable_kwmconnection() {
  // @@protoc_insertion_point(field_mutable_list:LockProto.kwmConnection)
  return &kwmconnection_;
}
const ::google::protobuf::RepeatedPtrField< ::KwmConnection >&
LockProto::kwmconnection() const {
  // @@protoc_insertion_point(field_list:LockProto.kwmConnection)
  return kwmconnection_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
