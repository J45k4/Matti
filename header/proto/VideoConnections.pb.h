// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: VideoConnections.proto

#ifndef PROTOBUF_VideoConnections_2eproto__INCLUDED
#define PROTOBUF_VideoConnections_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "VideoConnection.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_VideoConnections_2eproto();
void protobuf_AssignDesc_VideoConnections_2eproto();
void protobuf_ShutdownFile_VideoConnections_2eproto();

class VideoConnections;

// ===================================================================

class VideoConnections : public ::google::protobuf::Message {
 public:
  VideoConnections();
  virtual ~VideoConnections();

  VideoConnections(const VideoConnections& from);

  inline VideoConnections& operator=(const VideoConnections& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const VideoConnections& default_instance();

  void Swap(VideoConnections* other);

  // implements Message ----------------------------------------------

  inline VideoConnections* New() const { return New(NULL); }

  VideoConnections* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const VideoConnections& from);
  void MergeFrom(const VideoConnections& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(VideoConnections* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .VideoConnection videoConnections = 1;
  int videoconnections_size() const;
  void clear_videoconnections();
  static const int kVideoConnectionsFieldNumber = 1;
  const ::VideoConnection& videoconnections(int index) const;
  ::VideoConnection* mutable_videoconnections(int index);
  ::VideoConnection* add_videoconnections();
  ::google::protobuf::RepeatedPtrField< ::VideoConnection >*
      mutable_videoconnections();
  const ::google::protobuf::RepeatedPtrField< ::VideoConnection >&
      videoconnections() const;

  // @@protoc_insertion_point(class_scope:VideoConnections)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedPtrField< ::VideoConnection > videoconnections_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_VideoConnections_2eproto();
  friend void protobuf_AssignDesc_VideoConnections_2eproto();
  friend void protobuf_ShutdownFile_VideoConnections_2eproto();

  void InitAsDefaultInstance();
  static VideoConnections* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// VideoConnections

// repeated .VideoConnection videoConnections = 1;
inline int VideoConnections::videoconnections_size() const {
  return videoconnections_.size();
}
inline void VideoConnections::clear_videoconnections() {
  videoconnections_.Clear();
}
inline const ::VideoConnection& VideoConnections::videoconnections(int index) const {
  // @@protoc_insertion_point(field_get:VideoConnections.videoConnections)
  return videoconnections_.Get(index);
}
inline ::VideoConnection* VideoConnections::mutable_videoconnections(int index) {
  // @@protoc_insertion_point(field_mutable:VideoConnections.videoConnections)
  return videoconnections_.Mutable(index);
}
inline ::VideoConnection* VideoConnections::add_videoconnections() {
  // @@protoc_insertion_point(field_add:VideoConnections.videoConnections)
  return videoconnections_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::VideoConnection >*
VideoConnections::mutable_videoconnections() {
  // @@protoc_insertion_point(field_mutable_list:VideoConnections.videoConnections)
  return &videoconnections_;
}
inline const ::google::protobuf::RepeatedPtrField< ::VideoConnection >&
VideoConnections::videoconnections() const {
  // @@protoc_insertion_point(field_list:VideoConnections.videoConnections)
  return videoconnections_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_VideoConnections_2eproto__INCLUDED
