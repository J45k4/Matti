// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Matrixs.proto

#ifndef PROTOBUF_Matrixs_2eproto__INCLUDED
#define PROTOBUF_Matrixs_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "Matrix.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_Matrixs_2eproto();
void protobuf_AssignDesc_Matrixs_2eproto();
void protobuf_ShutdownFile_Matrixs_2eproto();

class Matrixs;

// ===================================================================

class Matrixs : public ::google::protobuf::Message {
 public:
  Matrixs();
  virtual ~Matrixs();

  Matrixs(const Matrixs& from);

  inline Matrixs& operator=(const Matrixs& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Matrixs& default_instance();

  void Swap(Matrixs* other);

  // implements Message ----------------------------------------------

  inline Matrixs* New() const { return New(NULL); }

  Matrixs* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Matrixs& from);
  void MergeFrom(const Matrixs& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Matrixs* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .MatrixProto matrixs = 1;
  int matrixs_size() const;
  void clear_matrixs();
  static const int kMatrixsFieldNumber = 1;
  const ::MatrixProto& matrixs(int index) const;
  ::MatrixProto* mutable_matrixs(int index);
  ::MatrixProto* add_matrixs();
  ::google::protobuf::RepeatedPtrField< ::MatrixProto >*
      mutable_matrixs();
  const ::google::protobuf::RepeatedPtrField< ::MatrixProto >&
      matrixs() const;

  // @@protoc_insertion_point(class_scope:Matrixs)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedPtrField< ::MatrixProto > matrixs_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_Matrixs_2eproto();
  friend void protobuf_AssignDesc_Matrixs_2eproto();
  friend void protobuf_ShutdownFile_Matrixs_2eproto();

  void InitAsDefaultInstance();
  static Matrixs* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Matrixs

// repeated .MatrixProto matrixs = 1;
inline int Matrixs::matrixs_size() const {
  return matrixs_.size();
}
inline void Matrixs::clear_matrixs() {
  matrixs_.Clear();
}
inline const ::MatrixProto& Matrixs::matrixs(int index) const {
  // @@protoc_insertion_point(field_get:Matrixs.matrixs)
  return matrixs_.Get(index);
}
inline ::MatrixProto* Matrixs::mutable_matrixs(int index) {
  // @@protoc_insertion_point(field_mutable:Matrixs.matrixs)
  return matrixs_.Mutable(index);
}
inline ::MatrixProto* Matrixs::add_matrixs() {
  // @@protoc_insertion_point(field_add:Matrixs.matrixs)
  return matrixs_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::MatrixProto >*
Matrixs::mutable_matrixs() {
  // @@protoc_insertion_point(field_mutable_list:Matrixs.matrixs)
  return &matrixs_;
}
inline const ::google::protobuf::RepeatedPtrField< ::MatrixProto >&
Matrixs::matrixs() const {
  // @@protoc_insertion_point(field_list:Matrixs.matrixs)
  return matrixs_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Matrixs_2eproto__INCLUDED
